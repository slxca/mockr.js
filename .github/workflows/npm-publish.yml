name: Publish_Package

on:
  workflow_dispatch:
      
permissions: write-all
  
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      NODE_AUTH_TOKEN: ${{secrets.PUBLISH_NPM_TOKEN}}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20.x
      - run: npm ci
      - run: npm run lint && npm run build
      
  publish-npm:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20.x
          registry-url: https://registry.npmjs.org/
      - run: npm install
      - run: npm run build
      - name: Get version from package.json
        id: get-version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "VERSION=$VERSION" >> $GITHUB_ENV
      - run: |
          if [[ "$VERSION" == *"rc"* ]]; then
            npm publish --tag rc
          else
            npm publish
          fi


  publish-gpr:
    needs: build
    runs-on: ubuntu-latest
    env:
      NODE_AUTH_TOKEN: ${{secrets.PUBLISH_GITHUB_TOKEN}}
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          registry-url: https://npm.pkg.github.com/
          scope: '@slxca'
      - run: npm install
      - name: Update package.json name
        run: sed -i '2,2s/mockr.js/@slxca\/mockr.js/g' package.json
      - run: echo registry=https://npm.pkg.github.com/slxca >> .npmrc
      - run: npm run build
      - name: Get version from package.json
        id: get-version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "VERSION=$VERSION" >> $GITHUB_ENV
      - run: |
          if [[ "$VERSION" == *"rc"* ]]; then
            npm publish --tag rc
          else
            npm publish
          fi
          
